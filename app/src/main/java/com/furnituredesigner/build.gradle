plugins {
    id 'java'
    id 'application'
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    // UI Libraries
    implementation 'com.formdev:flatlaf:3.1.1'
    implementation 'com.formdev:flatlaf-extras:3.1.1'
    implementation 'com.formdev:flatlaf-intellij-themes:3.1.1'
    implementation 'com.miglayout:miglayout-swing:11.1'
    
    // Icons - using the correct versions
    implementation 'org.kordamp.ikonli:ikonli-core:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-swing:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-materialdesign2-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-fontawesome5-pack:12.3.1'
    
    // JMonkeyEngine core
    implementation 'org.jmonkeyengine:jme3-core:3.5.2-stable'
    implementation 'org.jmonkeyengine:jme3-desktop:3.5.2-stable'
    implementation 'org.jmonkeyengine:jme3-lwjgl:3.5.2-stable'  // LWJGL version 2
    implementation 'org.jmonkeyengine:jme3-plugins:3.5.2-stable'
    implementation 'org.jmonkeyengine:jme3-effects:3.5.2-stable'
    
    // SQLite JDBC
    implementation 'org.xerial:sqlite-jdbc:3.41.2.1'
    
    // For JSON handling
    implementation 'com.google.code.gson:gson:2.10.1'
    
    // Password hashing
    implementation 'org.mindrot:jbcrypt:0.4'
    
    // Animation
    implementation 'net.java.timingframework:timingframework-swing:7.3.1'
    
    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
}

application {
    mainClass = 'com.furnituredesigner.App'
}

// Set source and target compatibility for Java
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

// Ensure Java files are compiled with UTF-8 encoding
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

run {
    // Set working directory to project root
    workingDir = rootProject.projectDir
}

test {
    useJUnitPlatform()
}

// For creating a fat JAR
tasks.register('fatJar', Jar) {
    archiveClassifier = 'fat'
    
    manifest {
        attributes 'Main-Class': 'com.furnituredesigner.App'
    }
    
    from sourceSets.main.output
    
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

// Ensure resources are included in the build
sourceSets {
    main {
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}
